from PyQt6.QtCore import pyqtSlot
from PyQt6.QtWidgets import QWidget, QVBoxLayout, QTextBrowser, QPushButton

# Beispiel zur Signal-Slot-Verbindung in PyQt6
# Ziel: Wenn der Button gedrückt wird (released), soll eine Nachricht im TextBrowser erscheinen

class CentralWidget(QWidget):
    def __init__(self, parent=None):
        super(CentralWidget, self).__init__(parent)

        # Textausgabefeld
        self.__text_browser = QTextBrowser(self)

        # Button mit der Aufschrift "Senden"
        self.__push_button = QPushButton("Senden")

        # Verbindung des Signals "released" mit dem Slot "handel_push_button"
        self.__push_button.released.connect(self.handel_push_button)

        # Layout-Manager (vertikal) und Hinzufügen der Elemente
        layout = QVBoxLayout()
        layout.addWidget(self.__text_browser)
        layout.addWidget(self.__push_button)

        self.setLayout(layout)

    # Slot-Methode, die bei Button-Druck ausgelöst wird
    @pyqtSlot()
    def handel_push_button(self):
        self.__text_browser.append("QPushButton wurde gedrückt.")
